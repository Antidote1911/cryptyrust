name: ActionsCI

env:
  Platform: #Any CPU|Win32|x64
  Configuration: Release
  Artifacts: build/Release/

on:
  push:
    branches: [master, develop]

jobs:
  build-windows-qt68:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@main
    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '[17,18)'  # 17.xx
        msbuild-architecture: x64
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version:      6.8.1
        host:         windows
        target:       desktop
        modules:      qtmultimedia
        setup-python: false
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true        
    - name: Build Rust project
      run: cargo build --release
    - name: build
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        set CL=/MP
        cmake -B./build -S. ${{ github.workspace }}\qtgui
        cmake --build ./build --config ${{env.Configuration}}
    - name: deploy
      run:  |        
        windeployqt.exe --no-compiler-runtime --release build\Release\cryptyrust.exe
        xcopy ${{ github.workspace }}\LICENSE build\Release
        rmdir /s build\Release\generic
        rmdir /s build\Release\networkinformation
        rmdir /s build\Release\translations
        del /F build\Release\Qt6Network.dll
    - name: Compress artifacts
      uses: vimtor/action-zip@v1.1
      with:
        files: build\Release
        dest: "build/cryptyrust.zip"
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cryptyrust.zip
        path: build\Release

